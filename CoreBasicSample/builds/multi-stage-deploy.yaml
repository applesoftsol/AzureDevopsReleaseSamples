trigger:
  - master

variables:
  AssemblyVersion: '0.0.1'
  solution: 'CoreBasicSample/src/MyWonderfulApp.Service.sln'
  serviceProject: 'CoreBasicSample/src/MyWonderfulApp.Service/MyWonderfulApp.Service.csproj'
  serviceProjectDir: 'CoreBasicSample/src/MyWonderfulApp.Service'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
  - stage: build_test
    jobs:
      - job: "BuildCoreApp"
        pool:
          name: Hosted Windows 2019 with VS2019
        
        steps:

        - task: DotNetCoreInstaller@0
          displayName: 'Use .NET Core sdk 2.2.105'
          inputs:
            version: 2.2.105

        - task: DotNetCoreCLI@1
          displayName: 'dotnet restore'
          inputs:
            command: restore
            projects: '$(solution)'

        - task: VSBuild@1
          displayName: 'Build solution $(solution)'
          inputs:
            solution: '$(solution)'
            vsVersion: "15.0"
            platform: '$(BuildPlatform)'
            configuration: '$(BuildConfiguration)'
            clean: true
        
        - task: DotNetCoreCLI@1
          displayName: 'dotnet test'
          inputs:
            command: test
            projects: '$(solution)'
            arguments: '--logger:trx;LogFileName=$(Common.TestResultsDirectory)\test.trx --no-build --configuration $(BuildConfiguration) '
          continueOnError: true
        
        - task: PublishTestResults@1
          displayName: 'Publish Test Results from dotnet'
          inputs:
            testRunner: VSTest
            testResultsFiles: '$(Common.TestResultsDirectory)\**\*.trx '

        - task: DotNetCoreCLI@2
          displayName: .NET Core Publish
          inputs:
            command: publish
            projects: '$(serviceProject)'
            arguments: '--output $(Build.ArtifactStagingDirectory)\service'
            configuration: $(BuildConfiguration)
            workingDirectory: $(serviceProjectDir)
            publishWebProjects: False
            zipAfterPublish: true

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: Service'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)\service'
            ArtifactName: Service
            
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: Web config for out-of-process hosting'
          inputs:
            PathtoPublish: 'CoreBasicSample/assets/iis/web.config.OutOfProcessSample'
            ArtifactName: assets

  - stage: deploy
    dependsOn: build_test
    jobs:
      - deployment: "Release_base_site"
        pool: "Hosted Vs2017"
        environment: "single_env"
        strategy:
          runOnce:
            deploy:
              steps:
              - task: ExtractFiles@1
                displayName: 'Extract files for base service '
                inputs:
                  archiveFilePatterns:  $(Pipeline.Workspace)/Service/MyWonderfulApp.Service.zip
                  destinationFolder: '$(Pipeline.Workspace)/FullSite'

                continueOnError: true

              - task: AzureRmWebAppDeployment@4
                displayName: 'Azure App Service Deploy: MyWonderfulAppService'
                inputs:
                  azureSubscription: 'MyAzureRM'
                  WebAppName: aspdotnet00
                  Package: '$(Pipeline.Workspace)/FullSite'

